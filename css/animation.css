:root{
    --green-code-comment: darkgreen;
    --code-bg-color: rgb(242, 241, 241);
}

.code{
    background-color: var(--code-bg-color);
    border: 2px groove var(--code-bg-color);
    padding: 0.5rem;
    border-radius: 0.2rem;
    margin: 0.5rem 1rem;
}

.code-comment{
    color: var(--green-code-comment);
}

/* animation simple : au survol ou focus s'il existe d'un élément */

/* créer la classe appliquée à l'élément qui prépare l'élément à une animation */

/* transition est une propriétée raccourcie */
.translation{
    transition: box-shadow 2s, transform 2s;
}

.translation:hover{
    box-shadow: 5px 5px black;
    transform: translate(10px, -10px);
    border: 3px dashed darkgreen;
}

.scale-up{
    transition-property: transform;
    transition-duration: 0.5s;
    transition-timing-function: ease;
    transition-delay: 0.2s;
    /*
    transition: transform 0.5s ease 0.2s;
    */
}

.scale-up:hover{
    transform: scale(1.2);
}

#exo-anim td{
    transition: transform 0.5s;
}

#exo-anim td:hover{
    transform: scale(1.1);
    box-shadow: inset 0px 0px 0px 1px;
    background-color: var(--site-bg-color);
}

.espace-animation{
    width: 100%;
    position: relative;
    padding-bottom: 30%;
    background-color: var(--site-third-color-25);
}

.cercle-animation{
    position: absolute;
    width: 50px;
    height: 50px;
    background-color: orange;
    border-radius: 50%;
    font-size: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 3px solid var(--site-color);
}

.animation{
    /* on décrit l'animation */
    /* 
    animation est une prépriété raccourcie, qui se compose de  
    
    animation-name              : nom de l'animation
    animation-duration          : durée de l'animation
    animation-timing-function   : la vitesse constante ou non de l'animation
    animation-delay             : le délai avant le début de l'animation
    animation-iteration-count   : le nombre de fois que l'animation se joue
    animation-direction         : le "sens" de l'animation (par exemple commencer au début ou à l'envers
    */
    animation-name: fleche-qui-bouge;
    animation-duration: 3s;
    animation-iteration-count: infinite;
}

/* il faut aller définir les images clefs de l'animation */

@keyframes fleche-qui-bouge {
    0%{
        transform: rotate(0deg);
        left: 0%;
        top: 0%;
    }
    25%{
        top: 0%;
    }
    50%{
        transform: rotate(180deg);
        left: 70%;
        top: 25%;
    }
    75%{
        top: 65%;
    }
    100%{
        transform: rotate(-360deg);
        left: 0%;
        top: 0%;
    }
}

.cadre{
    width: 100%;
    --dark-green: #072620;
    border: 1px solid var(--dark-green);
    margin: 0.5rem 0;
    padding: 1rem;
    height: auto;
}

.chargement{
    height: 1rem;
    border: 1px solid var(--dark-green);
    margin: 0.5rem 0;
    padding: 2px;
}

.charge-01{
    width: 100%;
    height: 100%;
    background-color: var(--dark-green);
    transform-origin: left center;
    animation: chargement 3s infinite ease-in alternate;
}

.charge-02{
    width: 100%;
    height: 100%;
    background-color: var(--dark-green);
    transform-origin: left center;
    animation: chargement 3s infinite ease-in-out alternate;
}

.charge-03{
    width: 100%;
    height: 100%;
    background-color: var(--dark-green);
    transform-origin: left center;
    animation: chargement 3s infinite ease alternate;
}

.charge-04{
    width: 100%;
    height: 100%;
    background-color: var(--dark-green);
    transform-origin: left center;
    animation: chargement 3s infinite steps(10) alternate;
}

@keyframes chargement{
    from{
        transform: scaleX(0);
    }
    to{
        transform: scaleX(1);
    }
}

.clignotant{
    animation: clignoter 0.8s infinite;
}

@keyframes clignoter {
    0%{
        opacity: 1;
    }
    40%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}